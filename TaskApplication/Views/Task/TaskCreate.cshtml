@model TaskApplication.Models.Task

@{
    ViewBag.Title = "Create";
}

<h2>TaskCreate</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Task</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "txtName", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @id = "txtDesc", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstimatedCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstimatedCost, new { htmlAttributes = new { @id = "txtCost", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimatedCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriorityName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Priority", new SelectList((System.Collections.IEnumerable)ViewData["PriorityList"], "Value", "Text"), "Select", new { @id = "ddlPrioritylist", @class = "form-control" })
				
				@Html.ValidationMessageFor(model => model.PriorityID, "", new { @class = "text-danger" })
			</div>
        </div>

        <div class="form-group">
            <button id="btnSubmit" class="btn btn-success" onclick="DataSave();">
                Submit
            </button>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "TaskList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
